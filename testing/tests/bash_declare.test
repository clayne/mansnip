2397 SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS
       ddeeccllaarree [--aaAAffFFggiillnnrrttuuxx] [--pp] [_n_a_m_e[=_v_a_l_u_e] ...]
       ttyyppeesseett [--aaAAffFFggiillnnrrttuuxx] [--pp] [_n_a_m_e[=_v_a_l_u_e] ...]
              Declare  variables and/or give them attributes.  If no _n_a_m_es are given then display the values of variables.  The --pp option will display the attributes and values of each _n_a_m_e.  When --pp is used with _n_a_m_e arguments, additional op‐
              tions, other than --ff and --FF, are ignored.  When --pp is supplied without _n_a_m_e arguments, it will display the attributes and values of all variables having the attributes specified by the additional options.  If no other options are
              supplied  with --pp, ddeeccllaarree will display the attributes and values of all shell variables.  The --ff option will restrict the display to shell functions.  The --FF option inhibits the display of function definitions; only the function
              name and attributes are printed.  If the eexxttddeebbuugg shell option is enabled using sshhoopptt, the source file name and line number where each _n_a_m_e is defined are displayed as well.  The --FF option implies --ff.  The --gg option forces  vari‐
              ables  to be created or modified at the global scope, even when ddeeccllaarree is executed in a shell function.  It is ignored in all other cases.  The following options can be used to restrict output to variables with the specified at‐
              tribute or to give variables attributes:
              --aa     Each _n_a_m_e is an indexed array variable (see AArrrraayyss above).
              --AA     Each _n_a_m_e is an associative array variable (see AArrrraayyss above).
              --ff     Use function names only.
              --ii     The variable is treated as an integer; arithmetic evaluation (see AARRIITTHHMMEETTIICC EEVVAALLUUAATTIIOONN above) is performed when the variable is assigned a value.
              --ll     When the variable is assigned a value, all upper-case characters are converted to lower-case.  The upper-case attribute is disabled.
              --nn     Give each _n_a_m_e the _n_a_m_e_r_e_f attribute, making it a name reference to another variable.  That other variable is defined by the value of _n_a_m_e.  All references, assignments, and attribute modifications to  _n_a_m_e,  except  those
                     using or changing the --nn attribute itself, are performed on the variable referenced by _n_a_m_e's value.  The nameref attribute cannot be applied to array variables.
              --rr     Make _n_a_m_es readonly.  These names cannot then be assigned values by subsequent assignment statements or unset.
              --tt     Give each _n_a_m_e the _t_r_a_c_e attribute.  Traced functions inherit the DDEEBBUUGG and RREETTUURRNN traps from the calling shell.  The trace attribute has no special meaning for variables.
              --uu     When the variable is assigned a value, all lower-case characters are converted to upper-case.  The lower-case attribute is disabled.
              --xx     Mark _n_a_m_es for export to subsequent commands via the environment.

              Using  `+' instead of `-' turns off the attribute instead, with the exceptions that ++aa and ++AA may not be used to destroy array variables and ++rr will not remove the readonly attribute.  When used in a function, ddeeccllaarree and ttyyppeesseett
              make each _n_a_m_e local, as with the llooccaall command, unless the --gg option is supplied.  If a variable name is followed by =_v_a_l_u_e, the value of the variable is set to _v_a_l_u_e.  When using --aa or --AA and the compound assignment  syntax  to
              create  array  variables, additional attributes do not take effect until subsequent assignments.  The return value is 0 unless an invalid option is encountered, an attempt is made to define a function using ``-f foo=bar'', an at‐
              tempt is made to assign a value to a readonly variable, an attempt is made to assign a value to an array variable without using the compound assignment syntax (see AArrrraayyss above), one of the _n_a_m_e_s is not  a  valid  shell  variable
              name, an attempt is made to turn off readonly status for a readonly variable, an attempt is made to turn off array status for an array variable, or an attempt is made to display a non-existent function with --ff.

